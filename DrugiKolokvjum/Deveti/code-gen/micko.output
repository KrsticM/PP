Terminals unused in grammar

   _MINUS
   _DIV


Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 body

    7 type: _TYPE

    8 parameter: %empty
    9          | type _ID

   10 $@3: %empty

   11 body: _LBRACKET variable_list $@3 statement_list _RBRACKET

   12 variable_list: %empty
   13              | variable_list variable

   14 variable: type _ID _SEMICOLON

   15 statement_list: %empty
   16               | statement_list statement

   17 statement: compound_statement
   18          | assignment_statement
   19          | if_statement
   20          | return_statement

   21 my_statement: _LPAREN rel_exp _RPAREN _QMARK izraz _COLON izraz

   22 izraz: _ID
   23      | literal

   24 compound_statement: _LBRACKET statement_list _RBRACKET

   25 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   26 num_exp: exp
   27        | num_exp _MUL num_exp
   28        | num_exp _PLUS num_exp

   29 exp: literal
   30    | my_statement
   31    | _ID
   32    | function_call
   33    | _LPAREN num_exp _RPAREN

   34 literal: _INT_NUMBER
   35        | _UINT_NUMBER

   36 $@4: %empty

   37 function_call: _ID $@4 _LPAREN argument _RPAREN

   38 argument: %empty
   39         | num_exp

   40 if_statement: if_part
   41             | if_part _ELSE statement

   42 @5: %empty

   43 $@6: %empty

   44 if_part: _IF _LPAREN @5 rel_exp $@6 _RPAREN statement

   45 rel_exp: num_exp _RELOP num_exp

   46 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 7
_IF (259) 44
_ELSE (260) 41
_RETURN (261) 46
_ID (262) 6 9 14 22 25 31 37
_INT_NUMBER (263) 34
_UINT_NUMBER (264) 35
_LPAREN (265) 6 21 33 37 44
_RPAREN (266) 6 21 33 37 44
_LBRACKET (267) 11 24
_RBRACKET (268) 11 24
_ASSIGN (269) 25
_SEMICOLON (270) 14 25 46
_RELOP (271) 45
_QMARK (272) 21
_COLON (273) 21
_PLUS (274) 28
_MINUS (275)
_MUL (276) 27
_DIV (277)
ONLY_IF (278)


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
program (25)
    on left: 1, on right: 0
function_list (26)
    on left: 2 3, on right: 1 3
function (27)
    on left: 6, on right: 2 3
$@1 (28)
    on left: 4, on right: 6
$@2 (29)
    on left: 5, on right: 6
type (30)
    on left: 7, on right: 6 9 14
parameter (31)
    on left: 8 9, on right: 6
body (32)
    on left: 11, on right: 6
$@3 (33)
    on left: 10, on right: 11
variable_list (34)
    on left: 12 13, on right: 11 13
variable (35)
    on left: 14, on right: 13
statement_list (36)
    on left: 15 16, on right: 11 16 24
statement (37)
    on left: 17 18 19 20, on right: 16 41 44
my_statement (38)
    on left: 21, on right: 30
izraz (39)
    on left: 22 23, on right: 21
compound_statement (40)
    on left: 24, on right: 17
assignment_statement (41)
    on left: 25, on right: 18
num_exp (42)
    on left: 26 27 28, on right: 25 27 28 33 39 45 46
exp (43)
    on left: 29 30 31 32 33, on right: 26
literal (44)
    on left: 34 35, on right: 23 29
function_call (45)
    on left: 37, on right: 32
$@4 (46)
    on left: 36, on right: 37
argument (47)
    on left: 38 39, on right: 37
if_statement (48)
    on left: 40 41, on right: 19
if_part (49)
    on left: 44, on right: 40 41
@5 (50)
    on left: 42, on right: 44
$@6 (51)
    on left: 43, on right: 44
rel_exp (52)
    on left: 45, on right: 21 44
return_statement (53)
    on left: 46, on right: 20


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4
    type           go to state 5


State 1

    7 type: _TYPE .

    $default  reduce using rule 7 (type)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7
    type      go to state 5


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: type . _ID $@1 _LPAREN parameter _RPAREN $@2 body

    _ID  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: type _ID . $@1 _LPAREN parameter _RPAREN $@2 body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 9

    6 function: type _ID $@1 . _LPAREN parameter _RPAREN $@2 body

    _LPAREN  shift, and go to state 10


State 10

    6 function: type _ID $@1 _LPAREN . parameter _RPAREN $@2 body

    _TYPE  shift, and go to state 1

    $default  reduce using rule 8 (parameter)

    type       go to state 11
    parameter  go to state 12


State 11

    9 parameter: type . _ID

    _ID  shift, and go to state 13


State 12

    6 function: type _ID $@1 _LPAREN parameter . _RPAREN $@2 body

    _RPAREN  shift, and go to state 14


State 13

    9 parameter: type _ID .

    $default  reduce using rule 9 (parameter)


State 14

    6 function: type _ID $@1 _LPAREN parameter _RPAREN . $@2 body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 15


State 15

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 16

   11 body: _LBRACKET . variable_list $@3 statement_list _RBRACKET

    $default  reduce using rule 12 (variable_list)

    variable_list  go to state 18


State 17

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 body .

    $default  reduce using rule 6 (function)


State 18

   11 body: _LBRACKET variable_list . $@3 statement_list _RBRACKET
   13 variable_list: variable_list . variable

    _TYPE  shift, and go to state 1

    $default  reduce using rule 10 ($@3)

    type      go to state 19
    $@3       go to state 20
    variable  go to state 21


State 19

   14 variable: type . _ID _SEMICOLON

    _ID  shift, and go to state 22


State 20

   11 body: _LBRACKET variable_list $@3 . statement_list _RBRACKET

    $default  reduce using rule 15 (statement_list)

    statement_list  go to state 23


State 21

   13 variable_list: variable_list variable .

    $default  reduce using rule 13 (variable_list)


State 22

   14 variable: type _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 24


State 23

   11 body: _LBRACKET variable_list $@3 statement_list . _RBRACKET
   16 statement_list: statement_list . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _RBRACKET  shift, and go to state 29

    statement             go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 24

   14 variable: type _ID _SEMICOLON .

    $default  reduce using rule 14 (variable)


State 25

   44 if_part: _IF . _LPAREN @5 rel_exp $@6 _RPAREN statement

    _LPAREN  shift, and go to state 36


State 26

   46 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    my_statement   go to state 41
    num_exp        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 27

   25 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 46


State 28

   24 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 15 (statement_list)

    statement_list  go to state 47


State 29

   11 body: _LBRACKET variable_list $@3 statement_list _RBRACKET .

    $default  reduce using rule 11 (body)


State 30

   16 statement_list: statement_list statement .

    $default  reduce using rule 16 (statement_list)


State 31

   17 statement: compound_statement .

    $default  reduce using rule 17 (statement)


State 32

   18 statement: assignment_statement .

    $default  reduce using rule 18 (statement)


State 33

   19 statement: if_statement .

    $default  reduce using rule 19 (statement)


State 34

   40 if_statement: if_part .
   41             | if_part . _ELSE statement

    _ELSE  shift, and go to state 48

    $default  reduce using rule 40 (if_statement)


State 35

   20 statement: return_statement .

    $default  reduce using rule 20 (statement)


State 36

   44 if_part: _IF _LPAREN . @5 rel_exp $@6 _RPAREN statement

    $default  reduce using rule 42 (@5)

    @5  go to state 49


State 37

   31 exp: _ID .
   37 function_call: _ID . $@4 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 36 ($@4)
    $default  reduce using rule 31 (exp)

    $@4  go to state 50


State 38

   34 literal: _INT_NUMBER .

    $default  reduce using rule 34 (literal)


State 39

   35 literal: _UINT_NUMBER .

    $default  reduce using rule 35 (literal)


State 40

   21 my_statement: _LPAREN . rel_exp _RPAREN _QMARK izraz _COLON izraz
   33 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    my_statement   go to state 41
    num_exp        go to state 51
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    rel_exp        go to state 52


State 41

   30 exp: my_statement .

    $default  reduce using rule 30 (exp)


State 42

   27 num_exp: num_exp . _MUL num_exp
   28        | num_exp . _PLUS num_exp
   46 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 53
    _PLUS       shift, and go to state 54
    _MUL        shift, and go to state 55


State 43

   26 num_exp: exp .

    $default  reduce using rule 26 (num_exp)


State 44

   29 exp: literal .

    $default  reduce using rule 29 (exp)


State 45

   32 exp: function_call .

    $default  reduce using rule 32 (exp)


State 46

   25 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    my_statement   go to state 41
    num_exp        go to state 56
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 47

   16 statement_list: statement_list . statement
   24 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _RBRACKET  shift, and go to state 57

    statement             go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 48

   41 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28

    statement             go to state 58
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 49

   44 if_part: _IF _LPAREN @5 . rel_exp $@6 _RPAREN statement

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    my_statement   go to state 41
    num_exp        go to state 59
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    rel_exp        go to state 60


State 50

   37 function_call: _ID $@4 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 61


State 51

   27 num_exp: num_exp . _MUL num_exp
   28        | num_exp . _PLUS num_exp
   33 exp: _LPAREN num_exp . _RPAREN
   45 rel_exp: num_exp . _RELOP num_exp

    _RPAREN  shift, and go to state 62
    _RELOP   shift, and go to state 63
    _PLUS    shift, and go to state 54
    _MUL     shift, and go to state 55


State 52

   21 my_statement: _LPAREN rel_exp . _RPAREN _QMARK izraz _COLON izraz

    _RPAREN  shift, and go to state 64


State 53

   46 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 46 (return_statement)


State 54

   28 num_exp: num_exp _PLUS . num_exp

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    my_statement   go to state 41
    num_exp        go to state 65
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 55

   27 num_exp: num_exp _MUL . num_exp

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    my_statement   go to state 41
    num_exp        go to state 66
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 56

   25 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   27 num_exp: num_exp . _MUL num_exp
   28        | num_exp . _PLUS num_exp

    _SEMICOLON  shift, and go to state 67
    _PLUS       shift, and go to state 54
    _MUL        shift, and go to state 55


State 57

   24 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 24 (compound_statement)


State 58

   41 if_statement: if_part _ELSE statement .

    $default  reduce using rule 41 (if_statement)


State 59

   27 num_exp: num_exp . _MUL num_exp
   28        | num_exp . _PLUS num_exp
   45 rel_exp: num_exp . _RELOP num_exp

    _RELOP  shift, and go to state 63
    _PLUS   shift, and go to state 54
    _MUL    shift, and go to state 55


State 60

   44 if_part: _IF _LPAREN @5 rel_exp . $@6 _RPAREN statement

    $default  reduce using rule 43 ($@6)

    $@6  go to state 68


State 61

   37 function_call: _ID $@4 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    $default  reduce using rule 38 (argument)

    my_statement   go to state 41
    num_exp        go to state 69
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    argument       go to state 70


State 62

   33 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 33 (exp)


State 63

   45 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    my_statement   go to state 41
    num_exp        go to state 71
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 64

   21 my_statement: _LPAREN rel_exp _RPAREN . _QMARK izraz _COLON izraz

    _QMARK  shift, and go to state 72


State 65

   27 num_exp: num_exp . _MUL num_exp
   28        | num_exp . _PLUS num_exp
   28        | num_exp _PLUS num_exp .

    _MUL  shift, and go to state 55

    $default  reduce using rule 28 (num_exp)


State 66

   27 num_exp: num_exp . _MUL num_exp
   27        | num_exp _MUL num_exp .
   28        | num_exp . _PLUS num_exp

    $default  reduce using rule 27 (num_exp)


State 67

   25 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 25 (assignment_statement)


State 68

   44 if_part: _IF _LPAREN @5 rel_exp $@6 . _RPAREN statement

    _RPAREN  shift, and go to state 73


State 69

   27 num_exp: num_exp . _MUL num_exp
   28        | num_exp . _PLUS num_exp
   39 argument: num_exp .

    _PLUS  shift, and go to state 54
    _MUL   shift, and go to state 55

    $default  reduce using rule 39 (argument)


State 70

   37 function_call: _ID $@4 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 74


State 71

   27 num_exp: num_exp . _MUL num_exp
   28        | num_exp . _PLUS num_exp
   45 rel_exp: num_exp _RELOP num_exp .

    _PLUS  shift, and go to state 54
    _MUL   shift, and go to state 55

    $default  reduce using rule 45 (rel_exp)


State 72

   21 my_statement: _LPAREN rel_exp _RPAREN _QMARK . izraz _COLON izraz

    _ID           shift, and go to state 75
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39

    izraz    go to state 76
    literal  go to state 77


State 73

   44 if_part: _IF _LPAREN @5 rel_exp $@6 _RPAREN . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28

    statement             go to state 78
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 74

   37 function_call: _ID $@4 _LPAREN argument _RPAREN .

    $default  reduce using rule 37 (function_call)


State 75

   22 izraz: _ID .

    $default  reduce using rule 22 (izraz)


State 76

   21 my_statement: _LPAREN rel_exp _RPAREN _QMARK izraz . _COLON izraz

    _COLON  shift, and go to state 79


State 77

   23 izraz: literal .

    $default  reduce using rule 23 (izraz)


State 78

   44 if_part: _IF _LPAREN @5 rel_exp $@6 _RPAREN statement .

    $default  reduce using rule 44 (if_part)


State 79

   21 my_statement: _LPAREN rel_exp _RPAREN _QMARK izraz _COLON . izraz

    _ID           shift, and go to state 75
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39

    izraz    go to state 80
    literal  go to state 77


State 80

   21 my_statement: _LPAREN rel_exp _RPAREN _QMARK izraz _COLON izraz .

    $default  reduce using rule 21 (my_statement)
