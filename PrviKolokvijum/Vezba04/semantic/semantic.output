Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 body

    7 type: _TYPE

    8 parameter: %empty
    9          | type _ID

   10 body: _LBRACKET variable_list statement_list _RBRACKET

   11 variable_list: %empty
   12              | variable_list variable

   13 variable: vars _SEMICOLON

   14 vars: type _ID
   15     | vars _COMMA _ID

   16 statement_list: %empty
   17               | statement_list statement

   18 statement: compound_statement
   19          | assignment_statement
   20          | if_statement
   21          | return_statement
   22          | dowhile_statement

   23 compound_statement: _LBRACKET statement_list _RBRACKET

   24 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   25 num_exp: exp
   26        | num_exp _AROP exp

   27 exp: literal
   28    | _ID
   29    | _ID _INC
   30    | function_call
   31    | _LPAREN num_exp _RPAREN

   32 literal: _INT_NUMBER
   33        | _UINT_NUMBER

   34 $@3: %empty

   35 function_call: _ID $@3 _LPAREN argument _RPAREN

   36 argument: %empty
   37         | num_exp

   38 if_statement: if_part
   39             | if_part _ELSE statement

   40 if_part: _IF _LPAREN rel_exp _RPAREN statement

   41 rel_exp: num_exp _RELOP num_exp

   42 dowhile_statement: _DO statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

   43 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 7
_IF (259) 40
_ELSE (260) 39
_RETURN (261) 43
_DO (262) 42
_COMMA (263) 15
_INC (264) 29
_WHILE (265) 42
_ID (266) 6 9 14 15 24 28 29 35
_INT_NUMBER (267) 32
_UINT_NUMBER (268) 33
_LPAREN (269) 6 31 35 40 42
_RPAREN (270) 6 31 35 40 42
_LBRACKET (271) 10 23
_RBRACKET (272) 10 23
_ASSIGN (273) 24
_SEMICOLON (274) 13 24 42 43
_AROP (275) 26
_RELOP (276) 41
ONLY_IF (277)


Nonterminals, with rules where they appear

$accept (23)
    on left: 0
program (24)
    on left: 1, on right: 0
function_list (25)
    on left: 2 3, on right: 1 3
function (26)
    on left: 6, on right: 2 3
$@1 (27)
    on left: 4, on right: 6
$@2 (28)
    on left: 5, on right: 6
type (29)
    on left: 7, on right: 6 9 14
parameter (30)
    on left: 8 9, on right: 6
body (31)
    on left: 10, on right: 6
variable_list (32)
    on left: 11 12, on right: 10 12
variable (33)
    on left: 13, on right: 12
vars (34)
    on left: 14 15, on right: 13 15
statement_list (35)
    on left: 16 17, on right: 10 17 23
statement (36)
    on left: 18 19 20 21 22, on right: 17 39 40 42
compound_statement (37)
    on left: 23, on right: 18
assignment_statement (38)
    on left: 24, on right: 19
num_exp (39)
    on left: 25 26, on right: 24 26 31 37 41 43
exp (40)
    on left: 27 28 29 30 31, on right: 25 26
literal (41)
    on left: 32 33, on right: 27
function_call (42)
    on left: 35, on right: 30
$@3 (43)
    on left: 34, on right: 35
argument (44)
    on left: 36 37, on right: 35
if_statement (45)
    on left: 38 39, on right: 20
if_part (46)
    on left: 40, on right: 38 39
rel_exp (47)
    on left: 41, on right: 40 42
dowhile_statement (48)
    on left: 42, on right: 22
return_statement (49)
    on left: 43, on right: 21


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4
    type           go to state 5


State 1

    7 type: _TYPE .

    $default  reduce using rule 7 (type)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7
    type      go to state 5


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: type . _ID $@1 _LPAREN parameter _RPAREN $@2 body

    _ID  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: type _ID . $@1 _LPAREN parameter _RPAREN $@2 body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 9

    6 function: type _ID $@1 . _LPAREN parameter _RPAREN $@2 body

    _LPAREN  shift, and go to state 10


State 10

    6 function: type _ID $@1 _LPAREN . parameter _RPAREN $@2 body

    _TYPE  shift, and go to state 1

    $default  reduce using rule 8 (parameter)

    type       go to state 11
    parameter  go to state 12


State 11

    9 parameter: type . _ID

    _ID  shift, and go to state 13


State 12

    6 function: type _ID $@1 _LPAREN parameter . _RPAREN $@2 body

    _RPAREN  shift, and go to state 14


State 13

    9 parameter: type _ID .

    $default  reduce using rule 9 (parameter)


State 14

    6 function: type _ID $@1 _LPAREN parameter _RPAREN . $@2 body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 15


State 15

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 16

   10 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 18


State 17

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 body .

    $default  reduce using rule 6 (function)


State 18

   10 body: _LBRACKET variable_list . statement_list _RBRACKET
   12 variable_list: variable_list . variable

    _TYPE  shift, and go to state 1

    $default  reduce using rule 16 (statement_list)

    type            go to state 19
    variable        go to state 20
    vars            go to state 21
    statement_list  go to state 22


State 19

   14 vars: type . _ID

    _ID  shift, and go to state 23


State 20

   12 variable_list: variable_list variable .

    $default  reduce using rule 12 (variable_list)


State 21

   13 variable: vars . _SEMICOLON
   15 vars: vars . _COMMA _ID

    _COMMA      shift, and go to state 24
    _SEMICOLON  shift, and go to state 25


State 22

   10 body: _LBRACKET variable_list statement_list . _RBRACKET
   17 statement_list: statement_list . statement

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _DO        shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30
    _RBRACKET  shift, and go to state 31

    statement             go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    dowhile_statement     go to state 37
    return_statement      go to state 38


State 23

   14 vars: type _ID .

    $default  reduce using rule 14 (vars)


State 24

   15 vars: vars _COMMA . _ID

    _ID  shift, and go to state 39


State 25

   13 variable: vars _SEMICOLON .

    $default  reduce using rule 13 (variable)


State 26

   40 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 40


State 27

   43 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 45
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48


State 28

   42 dowhile_statement: _DO . statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _DO        shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30

    statement             go to state 49
    compound_statement    go to state 33
    assignment_statement  go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    dowhile_statement     go to state 37
    return_statement      go to state 38


State 29

   24 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 50


State 30

   23 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 51


State 31

   10 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 10 (body)


State 32

   17 statement_list: statement_list statement .

    $default  reduce using rule 17 (statement_list)


State 33

   18 statement: compound_statement .

    $default  reduce using rule 18 (statement)


State 34

   19 statement: assignment_statement .

    $default  reduce using rule 19 (statement)


State 35

   20 statement: if_statement .

    $default  reduce using rule 20 (statement)


State 36

   38 if_statement: if_part .
   39             | if_part . _ELSE statement

    _ELSE  shift, and go to state 52

    $default  reduce using rule 38 (if_statement)


State 37

   22 statement: dowhile_statement .

    $default  reduce using rule 22 (statement)


State 38

   21 statement: return_statement .

    $default  reduce using rule 21 (statement)


State 39

   15 vars: vars _COMMA _ID .

    $default  reduce using rule 15 (vars)


State 40

   40 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 53
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48
    rel_exp        go to state 54


State 41

   28 exp: _ID .
   29    | _ID . _INC
   35 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _INC  shift, and go to state 55

    _LPAREN   reduce using rule 34 ($@3)
    $default  reduce using rule 28 (exp)

    $@3  go to state 56


State 42

   32 literal: _INT_NUMBER .

    $default  reduce using rule 32 (literal)


State 43

   33 literal: _UINT_NUMBER .

    $default  reduce using rule 33 (literal)


State 44

   31 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 57
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48


State 45

   26 num_exp: num_exp . _AROP exp
   43 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 58
    _AROP       shift, and go to state 59


State 46

   25 num_exp: exp .

    $default  reduce using rule 25 (num_exp)


State 47

   27 exp: literal .

    $default  reduce using rule 27 (exp)


State 48

   30 exp: function_call .

    $default  reduce using rule 30 (exp)


State 49

   42 dowhile_statement: _DO statement . _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 60


State 50

   24 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 61
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48


State 51

   17 statement_list: statement_list . statement
   23 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _DO        shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30
    _RBRACKET  shift, and go to state 62

    statement             go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    dowhile_statement     go to state 37
    return_statement      go to state 38


State 52

   39 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _DO        shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30

    statement             go to state 63
    compound_statement    go to state 33
    assignment_statement  go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    dowhile_statement     go to state 37
    return_statement      go to state 38


State 53

   26 num_exp: num_exp . _AROP exp
   41 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 59
    _RELOP  shift, and go to state 64


State 54

   40 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 65


State 55

   29 exp: _ID _INC .

    $default  reduce using rule 29 (exp)


State 56

   35 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 66


State 57

   26 num_exp: num_exp . _AROP exp
   31 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 67
    _AROP    shift, and go to state 59


State 58

   43 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 43 (return_statement)


State 59

   26 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    exp            go to state 68
    literal        go to state 47
    function_call  go to state 48


State 60

   42 dowhile_statement: _DO statement _WHILE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 69


State 61

   24 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   26 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 70
    _AROP       shift, and go to state 59


State 62

   23 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 23 (compound_statement)


State 63

   39 if_statement: if_part _ELSE statement .

    $default  reduce using rule 39 (if_statement)


State 64

   41 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 71
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48


State 65

   40 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _DO        shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30

    statement             go to state 72
    compound_statement    go to state 33
    assignment_statement  go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    dowhile_statement     go to state 37
    return_statement      go to state 38


State 66

   35 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    $default  reduce using rule 36 (argument)

    num_exp        go to state 73
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48
    argument       go to state 74


State 67

   31 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 31 (exp)


State 68

   26 num_exp: num_exp _AROP exp .

    $default  reduce using rule 26 (num_exp)


State 69

   42 dowhile_statement: _DO statement _WHILE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 53
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48
    rel_exp        go to state 75


State 70

   24 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 24 (assignment_statement)


State 71

   26 num_exp: num_exp . _AROP exp
   41 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 59

    $default  reduce using rule 41 (rel_exp)


State 72

   40 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 40 (if_part)


State 73

   26 num_exp: num_exp . _AROP exp
   37 argument: num_exp .

    _AROP  shift, and go to state 59

    $default  reduce using rule 37 (argument)


State 74

   35 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 76


State 75

   42 dowhile_statement: _DO statement _WHILE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 77


State 76

   35 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 35 (function_call)


State 77

   42 dowhile_statement: _DO statement _WHILE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 78


State 78

   42 dowhile_statement: _DO statement _WHILE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 42 (dowhile_statement)
