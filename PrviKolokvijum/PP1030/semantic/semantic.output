Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 body

    7 type: _TYPE

    8 parameter: %empty
    9          | type _ID

   10 body: _LBRACKET variable_list statement_list _RBRACKET

   11 variable_list: %empty
   12              | variable_list variable

   13 variable: type _ID _SEMICOLON

   14 statement_list: %empty
   15               | statement_list statement

   16 statement: compound_statement
   17          | assignment_statement
   18          | if_statement
   19          | ternar_exp
   20          | return_statement

   21 compound_statement: _LBRACKET statement_list _RBRACKET

   22 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   23 num_exp: exp
   24        | num_exp _AROP exp

   25 exp: literal
   26    | _ID
   27    | function_call
   28    | _LPAREN num_exp _RPAREN

   29 literal: _INT_NUMBER
   30        | _UINT_NUMBER

   31 $@3: %empty

   32 function_call: _ID $@3 _LPAREN argument _RPAREN

   33 argument: %empty
   34         | num_exp

   35 ternar_exp: rel_exp _QMARK operand _COLON operand

   36 operand: literal
   37        | variable

   38 if_statement: if_part
   39             | if_part _ELSE statement

   40 if_part: _IF _LPAREN rel_exp _RPAREN statement

   41 rel_exp: num_exp _RELOP num_exp

   42 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 7
_IF (259) 40
_ELSE (260) 39
_RETURN (261) 42
_ID (262) 6 9 13 22 26 32
_INT_NUMBER (263) 29
_UINT_NUMBER (264) 30
_LPAREN (265) 6 28 32 40
_RPAREN (266) 6 28 32 40
_LBRACKET (267) 10 21
_RBRACKET (268) 10 21
_ASSIGN (269) 22
_SEMICOLON (270) 13 22 42
_AROP (271) 24
_RELOP (272) 41
_COLON (273) 35
_QMARK (274) 35
ONLY_IF (275)


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
program (22)
    on left: 1, on right: 0
function_list (23)
    on left: 2 3, on right: 1 3
function (24)
    on left: 6, on right: 2 3
$@1 (25)
    on left: 4, on right: 6
$@2 (26)
    on left: 5, on right: 6
type (27)
    on left: 7, on right: 6 9 13
parameter (28)
    on left: 8 9, on right: 6
body (29)
    on left: 10, on right: 6
variable_list (30)
    on left: 11 12, on right: 10 12
variable (31)
    on left: 13, on right: 12 37
statement_list (32)
    on left: 14 15, on right: 10 15 21
statement (33)
    on left: 16 17 18 19 20, on right: 15 39 40
compound_statement (34)
    on left: 21, on right: 16
assignment_statement (35)
    on left: 22, on right: 17
num_exp (36)
    on left: 23 24, on right: 22 24 28 34 41 42
exp (37)
    on left: 25 26 27 28, on right: 23 24
literal (38)
    on left: 29 30, on right: 25 36
function_call (39)
    on left: 32, on right: 27
$@3 (40)
    on left: 31, on right: 32
argument (41)
    on left: 33 34, on right: 32
ternar_exp (42)
    on left: 35, on right: 19
operand (43)
    on left: 36 37, on right: 35
if_statement (44)
    on left: 38 39, on right: 18
if_part (45)
    on left: 40, on right: 38 39
rel_exp (46)
    on left: 41, on right: 35 40
return_statement (47)
    on left: 42, on right: 20


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4
    type           go to state 5


State 1

    7 type: _TYPE .

    $default  reduce using rule 7 (type)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7
    type      go to state 5


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: type . _ID $@1 _LPAREN parameter _RPAREN $@2 body

    _ID  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: type _ID . $@1 _LPAREN parameter _RPAREN $@2 body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 9

    6 function: type _ID $@1 . _LPAREN parameter _RPAREN $@2 body

    _LPAREN  shift, and go to state 10


State 10

    6 function: type _ID $@1 _LPAREN . parameter _RPAREN $@2 body

    _TYPE  shift, and go to state 1

    $default  reduce using rule 8 (parameter)

    type       go to state 11
    parameter  go to state 12


State 11

    9 parameter: type . _ID

    _ID  shift, and go to state 13


State 12

    6 function: type _ID $@1 _LPAREN parameter . _RPAREN $@2 body

    _RPAREN  shift, and go to state 14


State 13

    9 parameter: type _ID .

    $default  reduce using rule 9 (parameter)


State 14

    6 function: type _ID $@1 _LPAREN parameter _RPAREN . $@2 body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 15


State 15

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 16

   10 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 18


State 17

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 body .

    $default  reduce using rule 6 (function)


State 18

   10 body: _LBRACKET variable_list . statement_list _RBRACKET
   12 variable_list: variable_list . variable

    _TYPE  shift, and go to state 1

    $default  reduce using rule 14 (statement_list)

    type            go to state 19
    variable        go to state 20
    statement_list  go to state 21


State 19

   13 variable: type . _ID _SEMICOLON

    _ID  shift, and go to state 22


State 20

   12 variable_list: variable_list variable .

    $default  reduce using rule 12 (variable_list)


State 21

   10 body: _LBRACKET variable_list statement_list . _RBRACKET
   15 statement_list: statement_list . statement

    _IF           shift, and go to state 23
    _RETURN       shift, and go to state 24
    _ID           shift, and go to state 25
    _INT_NUMBER   shift, and go to state 26
    _UINT_NUMBER  shift, and go to state 27
    _LPAREN       shift, and go to state 28
    _LBRACKET     shift, and go to state 29
    _RBRACKET     shift, and go to state 30

    statement             go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    num_exp               go to state 34
    exp                   go to state 35
    literal               go to state 36
    function_call         go to state 37
    ternar_exp            go to state 38
    if_statement          go to state 39
    if_part               go to state 40
    rel_exp               go to state 41
    return_statement      go to state 42


State 22

   13 variable: type _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 43


State 23

   40 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 44


State 24

   42 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 26
    _UINT_NUMBER  shift, and go to state 27
    _LPAREN       shift, and go to state 28

    num_exp        go to state 46
    exp            go to state 35
    literal        go to state 36
    function_call  go to state 37


State 25

   22 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   26 exp: _ID .
   32 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _ASSIGN  shift, and go to state 47

    _LPAREN   reduce using rule 31 ($@3)
    $default  reduce using rule 26 (exp)

    $@3  go to state 48


State 26

   29 literal: _INT_NUMBER .

    $default  reduce using rule 29 (literal)


State 27

   30 literal: _UINT_NUMBER .

    $default  reduce using rule 30 (literal)


State 28

   28 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 26
    _UINT_NUMBER  shift, and go to state 27
    _LPAREN       shift, and go to state 28

    num_exp        go to state 49
    exp            go to state 35
    literal        go to state 36
    function_call  go to state 37


State 29

   21 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 14 (statement_list)

    statement_list  go to state 50


State 30

   10 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 10 (body)


State 31

   15 statement_list: statement_list statement .

    $default  reduce using rule 15 (statement_list)


State 32

   16 statement: compound_statement .

    $default  reduce using rule 16 (statement)


State 33

   17 statement: assignment_statement .

    $default  reduce using rule 17 (statement)


State 34

   24 num_exp: num_exp . _AROP exp
   41 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 51
    _RELOP  shift, and go to state 52


State 35

   23 num_exp: exp .

    $default  reduce using rule 23 (num_exp)


State 36

   25 exp: literal .

    $default  reduce using rule 25 (exp)


State 37

   27 exp: function_call .

    $default  reduce using rule 27 (exp)


State 38

   19 statement: ternar_exp .

    $default  reduce using rule 19 (statement)


State 39

   18 statement: if_statement .

    $default  reduce using rule 18 (statement)


State 40

   38 if_statement: if_part .
   39             | if_part . _ELSE statement

    _ELSE  shift, and go to state 53

    $default  reduce using rule 38 (if_statement)


State 41

   35 ternar_exp: rel_exp . _QMARK operand _COLON operand

    _QMARK  shift, and go to state 54


State 42

   20 statement: return_statement .

    $default  reduce using rule 20 (statement)


State 43

   13 variable: type _ID _SEMICOLON .

    $default  reduce using rule 13 (variable)


State 44

   40 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 26
    _UINT_NUMBER  shift, and go to state 27
    _LPAREN       shift, and go to state 28

    num_exp        go to state 34
    exp            go to state 35
    literal        go to state 36
    function_call  go to state 37
    rel_exp        go to state 55


State 45

   26 exp: _ID .
   32 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 31 ($@3)
    $default  reduce using rule 26 (exp)

    $@3  go to state 48


State 46

   24 num_exp: num_exp . _AROP exp
   42 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 56
    _AROP       shift, and go to state 51


State 47

   22 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 26
    _UINT_NUMBER  shift, and go to state 27
    _LPAREN       shift, and go to state 28

    num_exp        go to state 57
    exp            go to state 35
    literal        go to state 36
    function_call  go to state 37


State 48

   32 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 58


State 49

   24 num_exp: num_exp . _AROP exp
   28 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 59
    _AROP    shift, and go to state 51


State 50

   15 statement_list: statement_list . statement
   21 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF           shift, and go to state 23
    _RETURN       shift, and go to state 24
    _ID           shift, and go to state 25
    _INT_NUMBER   shift, and go to state 26
    _UINT_NUMBER  shift, and go to state 27
    _LPAREN       shift, and go to state 28
    _LBRACKET     shift, and go to state 29
    _RBRACKET     shift, and go to state 60

    statement             go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    num_exp               go to state 34
    exp                   go to state 35
    literal               go to state 36
    function_call         go to state 37
    ternar_exp            go to state 38
    if_statement          go to state 39
    if_part               go to state 40
    rel_exp               go to state 41
    return_statement      go to state 42


State 51

   24 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 26
    _UINT_NUMBER  shift, and go to state 27
    _LPAREN       shift, and go to state 28

    exp            go to state 61
    literal        go to state 36
    function_call  go to state 37


State 52

   41 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 26
    _UINT_NUMBER  shift, and go to state 27
    _LPAREN       shift, and go to state 28

    num_exp        go to state 62
    exp            go to state 35
    literal        go to state 36
    function_call  go to state 37


State 53

   39 if_statement: if_part _ELSE . statement

    _IF           shift, and go to state 23
    _RETURN       shift, and go to state 24
    _ID           shift, and go to state 25
    _INT_NUMBER   shift, and go to state 26
    _UINT_NUMBER  shift, and go to state 27
    _LPAREN       shift, and go to state 28
    _LBRACKET     shift, and go to state 29

    statement             go to state 63
    compound_statement    go to state 32
    assignment_statement  go to state 33
    num_exp               go to state 34
    exp                   go to state 35
    literal               go to state 36
    function_call         go to state 37
    ternar_exp            go to state 38
    if_statement          go to state 39
    if_part               go to state 40
    rel_exp               go to state 41
    return_statement      go to state 42


State 54

   35 ternar_exp: rel_exp _QMARK . operand _COLON operand

    _TYPE         shift, and go to state 1
    _INT_NUMBER   shift, and go to state 26
    _UINT_NUMBER  shift, and go to state 27

    type      go to state 19
    variable  go to state 64
    literal   go to state 65
    operand   go to state 66


State 55

   40 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 67


State 56

   42 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 42 (return_statement)


State 57

   22 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   24 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 68
    _AROP       shift, and go to state 51


State 58

   32 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 26
    _UINT_NUMBER  shift, and go to state 27
    _LPAREN       shift, and go to state 28

    $default  reduce using rule 33 (argument)

    num_exp        go to state 69
    exp            go to state 35
    literal        go to state 36
    function_call  go to state 37
    argument       go to state 70


State 59

   28 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 28 (exp)


State 60

   21 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 21 (compound_statement)


State 61

   24 num_exp: num_exp _AROP exp .

    $default  reduce using rule 24 (num_exp)


State 62

   24 num_exp: num_exp . _AROP exp
   41 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 51

    $default  reduce using rule 41 (rel_exp)


State 63

   39 if_statement: if_part _ELSE statement .

    $default  reduce using rule 39 (if_statement)


State 64

   37 operand: variable .

    $default  reduce using rule 37 (operand)


State 65

   36 operand: literal .

    $default  reduce using rule 36 (operand)


State 66

   35 ternar_exp: rel_exp _QMARK operand . _COLON operand

    _COLON  shift, and go to state 71


State 67

   40 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF           shift, and go to state 23
    _RETURN       shift, and go to state 24
    _ID           shift, and go to state 25
    _INT_NUMBER   shift, and go to state 26
    _UINT_NUMBER  shift, and go to state 27
    _LPAREN       shift, and go to state 28
    _LBRACKET     shift, and go to state 29

    statement             go to state 72
    compound_statement    go to state 32
    assignment_statement  go to state 33
    num_exp               go to state 34
    exp                   go to state 35
    literal               go to state 36
    function_call         go to state 37
    ternar_exp            go to state 38
    if_statement          go to state 39
    if_part               go to state 40
    rel_exp               go to state 41
    return_statement      go to state 42


State 68

   22 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 22 (assignment_statement)


State 69

   24 num_exp: num_exp . _AROP exp
   34 argument: num_exp .

    _AROP  shift, and go to state 51

    $default  reduce using rule 34 (argument)


State 70

   32 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 73


State 71

   35 ternar_exp: rel_exp _QMARK operand _COLON . operand

    _TYPE         shift, and go to state 1
    _INT_NUMBER   shift, and go to state 26
    _UINT_NUMBER  shift, and go to state 27

    type      go to state 19
    variable  go to state 64
    literal   go to state 65
    operand   go to state 74


State 72

   40 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 40 (if_part)


State 73

   32 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 32 (function_call)


State 74

   35 ternar_exp: rel_exp _QMARK operand _COLON operand .

    $default  reduce using rule 35 (ternar_exp)
