Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 body

    7 type: _TYPE

    8 parameter: %empty
    9          | type _ID

   10 body: _LBRACKET variable_list statement_list _RBRACKET

   11 variable_list: %empty
   12              | variable_list variable

   13 variable: type _ID _SEMICOLON

   14 statement_list: %empty
   15               | statement_list statement

   16 statement: compound_statement
   17          | assignment_statement
   18          | if_statement
   19          | function_statement
   20          | return_statement

   21 function_statement: _FUNCTION type f_parameter _ID _ARROW statement

   22 f_parameter: %empty
   23            | _LPAREN type _ID _RPAREN

   24 compound_statement: _LBRACKET statement_list _RBRACKET

   25 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   26 num_exp: exp
   27        | num_exp _AROP exp

   28 exp: literal
   29    | _ID
   30    | function_call
   31    | _LPAREN num_exp _RPAREN

   32 literal: _INT_NUMBER
   33        | _UINT_NUMBER

   34 $@3: %empty

   35 function_call: _ID $@3 _LPAREN argument _RPAREN

   36 argument: %empty
   37         | num_exp

   38 if_statement: if_part
   39             | if_part _ELSE statement

   40 if_part: _IF _LPAREN rel_exp _RPAREN statement

   41 rel_exp: num_exp _RELOP num_exp

   42 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 7
_IF (259) 40
_ELSE (260) 39
_RETURN (261) 42
_ID (262) 6 9 13 21 23 25 29 35
_INT_NUMBER (263) 32
_UINT_NUMBER (264) 33
_LPAREN (265) 6 23 31 35 40
_RPAREN (266) 6 23 31 35 40
_LBRACKET (267) 10 24
_RBRACKET (268) 10 24
_ASSIGN (269) 25
_SEMICOLON (270) 13 25 42
_AROP (271) 27
_RELOP (272) 41
ONLY_IF (273)
_FUNCTION (274) 21
_ARROW (275) 21


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
program (22)
    on left: 1, on right: 0
function_list (23)
    on left: 2 3, on right: 1 3
function (24)
    on left: 6, on right: 2 3
$@1 (25)
    on left: 4, on right: 6
$@2 (26)
    on left: 5, on right: 6
type (27)
    on left: 7, on right: 6 9 13 21 23
parameter (28)
    on left: 8 9, on right: 6
body (29)
    on left: 10, on right: 6
variable_list (30)
    on left: 11 12, on right: 10 12
variable (31)
    on left: 13, on right: 12
statement_list (32)
    on left: 14 15, on right: 10 15 24
statement (33)
    on left: 16 17 18 19 20, on right: 15 21 39 40
function_statement (34)
    on left: 21, on right: 19
f_parameter (35)
    on left: 22 23, on right: 21
compound_statement (36)
    on left: 24, on right: 16
assignment_statement (37)
    on left: 25, on right: 17
num_exp (38)
    on left: 26 27, on right: 25 27 31 37 41 42
exp (39)
    on left: 28 29 30 31, on right: 26 27
literal (40)
    on left: 32 33, on right: 28
function_call (41)
    on left: 35, on right: 30
$@3 (42)
    on left: 34, on right: 35
argument (43)
    on left: 36 37, on right: 35
if_statement (44)
    on left: 38 39, on right: 18
if_part (45)
    on left: 40, on right: 38 39
rel_exp (46)
    on left: 41, on right: 40
return_statement (47)
    on left: 42, on right: 20


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4
    type           go to state 5


State 1

    7 type: _TYPE .

    $default  reduce using rule 7 (type)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7
    type      go to state 5


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: type . _ID $@1 _LPAREN parameter _RPAREN $@2 body

    _ID  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: type _ID . $@1 _LPAREN parameter _RPAREN $@2 body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 9

    6 function: type _ID $@1 . _LPAREN parameter _RPAREN $@2 body

    _LPAREN  shift, and go to state 10


State 10

    6 function: type _ID $@1 _LPAREN . parameter _RPAREN $@2 body

    _TYPE  shift, and go to state 1

    $default  reduce using rule 8 (parameter)

    type       go to state 11
    parameter  go to state 12


State 11

    9 parameter: type . _ID

    _ID  shift, and go to state 13


State 12

    6 function: type _ID $@1 _LPAREN parameter . _RPAREN $@2 body

    _RPAREN  shift, and go to state 14


State 13

    9 parameter: type _ID .

    $default  reduce using rule 9 (parameter)


State 14

    6 function: type _ID $@1 _LPAREN parameter _RPAREN . $@2 body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 15


State 15

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 16

   10 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 18


State 17

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 body .

    $default  reduce using rule 6 (function)


State 18

   10 body: _LBRACKET variable_list . statement_list _RBRACKET
   12 variable_list: variable_list . variable

    _TYPE  shift, and go to state 1

    $default  reduce using rule 14 (statement_list)

    type            go to state 19
    variable        go to state 20
    statement_list  go to state 21


State 19

   13 variable: type . _ID _SEMICOLON

    _ID  shift, and go to state 22


State 20

   12 variable_list: variable_list variable .

    $default  reduce using rule 12 (variable_list)


State 21

   10 body: _LBRACKET variable_list statement_list . _RBRACKET
   15 statement_list: statement_list . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 27
    _FUNCTION  shift, and go to state 28

    statement             go to state 29
    function_statement    go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 22

   13 variable: type _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 36


State 23

   40 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 37


State 24

   42 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 25

   25 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 46


State 26

   24 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 14 (statement_list)

    statement_list  go to state 47


State 27

   10 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 10 (body)


State 28

   21 function_statement: _FUNCTION . type f_parameter _ID _ARROW statement

    _TYPE  shift, and go to state 1

    type  go to state 48


State 29

   15 statement_list: statement_list statement .

    $default  reduce using rule 15 (statement_list)


State 30

   19 statement: function_statement .

    $default  reduce using rule 19 (statement)


State 31

   16 statement: compound_statement .

    $default  reduce using rule 16 (statement)


State 32

   17 statement: assignment_statement .

    $default  reduce using rule 17 (statement)


State 33

   18 statement: if_statement .

    $default  reduce using rule 18 (statement)


State 34

   38 if_statement: if_part .
   39             | if_part . _ELSE statement

    _ELSE  shift, and go to state 49

    $default  reduce using rule 38 (if_statement)


State 35

   20 statement: return_statement .

    $default  reduce using rule 20 (statement)


State 36

   13 variable: type _ID _SEMICOLON .

    $default  reduce using rule 13 (variable)


State 37

   40 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 50
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    rel_exp        go to state 51


State 38

   29 exp: _ID .
   35 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 34 ($@3)
    $default  reduce using rule 29 (exp)

    $@3  go to state 52


State 39

   32 literal: _INT_NUMBER .

    $default  reduce using rule 32 (literal)


State 40

   33 literal: _UINT_NUMBER .

    $default  reduce using rule 33 (literal)


State 41

   31 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 53
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 42

   27 num_exp: num_exp . _AROP exp
   42 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 54
    _AROP       shift, and go to state 55


State 43

   26 num_exp: exp .

    $default  reduce using rule 26 (num_exp)


State 44

   28 exp: literal .

    $default  reduce using rule 28 (exp)


State 45

   30 exp: function_call .

    $default  reduce using rule 30 (exp)


State 46

   25 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 56
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 47

   15 statement_list: statement_list . statement
   24 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 57
    _FUNCTION  shift, and go to state 28

    statement             go to state 29
    function_statement    go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 48

   21 function_statement: _FUNCTION type . f_parameter _ID _ARROW statement

    _LPAREN  shift, and go to state 58

    $default  reduce using rule 22 (f_parameter)

    f_parameter  go to state 59


State 49

   39 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FUNCTION  shift, and go to state 28

    statement             go to state 60
    function_statement    go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 50

   27 num_exp: num_exp . _AROP exp
   41 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 55
    _RELOP  shift, and go to state 61


State 51

   40 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 62


State 52

   35 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 63


State 53

   27 num_exp: num_exp . _AROP exp
   31 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 64
    _AROP    shift, and go to state 55


State 54

   42 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 42 (return_statement)


State 55

   27 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    exp            go to state 65
    literal        go to state 44
    function_call  go to state 45


State 56

   25 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   27 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 66
    _AROP       shift, and go to state 55


State 57

   24 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 24 (compound_statement)


State 58

   23 f_parameter: _LPAREN . type _ID _RPAREN

    _TYPE  shift, and go to state 1

    type  go to state 67


State 59

   21 function_statement: _FUNCTION type f_parameter . _ID _ARROW statement

    _ID  shift, and go to state 68


State 60

   39 if_statement: if_part _ELSE statement .

    $default  reduce using rule 39 (if_statement)


State 61

   41 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 69
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 62

   40 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FUNCTION  shift, and go to state 28

    statement             go to state 70
    function_statement    go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 63

   35 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    $default  reduce using rule 36 (argument)

    num_exp        go to state 71
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    argument       go to state 72


State 64

   31 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 31 (exp)


State 65

   27 num_exp: num_exp _AROP exp .

    $default  reduce using rule 27 (num_exp)


State 66

   25 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 25 (assignment_statement)


State 67

   23 f_parameter: _LPAREN type . _ID _RPAREN

    _ID  shift, and go to state 73


State 68

   21 function_statement: _FUNCTION type f_parameter _ID . _ARROW statement

    _ARROW  shift, and go to state 74


State 69

   27 num_exp: num_exp . _AROP exp
   41 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 55

    $default  reduce using rule 41 (rel_exp)


State 70

   40 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 40 (if_part)


State 71

   27 num_exp: num_exp . _AROP exp
   37 argument: num_exp .

    _AROP  shift, and go to state 55

    $default  reduce using rule 37 (argument)


State 72

   35 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 75


State 73

   23 f_parameter: _LPAREN type _ID . _RPAREN

    _RPAREN  shift, and go to state 76


State 74

   21 function_statement: _FUNCTION type f_parameter _ID _ARROW . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FUNCTION  shift, and go to state 28

    statement             go to state 77
    function_statement    go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    if_statement          go to state 33
    if_part               go to state 34
    return_statement      go to state 35


State 75

   35 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 35 (function_call)


State 76

   23 f_parameter: _LPAREN type _ID _RPAREN .

    $default  reduce using rule 23 (f_parameter)


State 77

   21 function_statement: _FUNCTION type f_parameter _ID _ARROW statement .

    $default  reduce using rule 21 (function_statement)
